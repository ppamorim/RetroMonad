apply plugin: 'jacoco'

//jacoco {
//    toolVersion "0.7.1.201405082137"
//}
//
//def coverageSourceDirs = [
//        "$projectDir/src/main/java",
//]
//
//task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
//    group = "Reporting"
//    description = "Generate Jacoco coverage reports after running tests."
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//    classDirectories = fileTree(
//            dir: './build/intermediates/classes/debug',
//            excludes: ['**/R*.class',
//                       '**/*$InjectAdapter.class',
//                       '**/*$ModuleAdapter.class',
//                       '**/*$ViewInjector*.class'
//            ]
//    )
//    sourceDirectories = files(coverageSourceDirs)
//    executionData = files("$buildDir/jacoco/testDebug.exec")
//    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
//    // We iterate through the compiled .class tree and rename $$ to $.
//    doFirst {
//        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
//            if (file.name.contains('$$')) {
//                file.renameTo(file.path.replace('$$', '$'))
//            }
//        }
//    }
//}

android.libraryVariants.all { variant ->
    task("test${variant.name.capitalize()}WithCoverage", type: JacocoReport, dependsOn: "test${variant.name.capitalize()}") {
        group = 'verification'
        description = "Run unit test for the ${variant.name} build with Jacoco code coverage reports."

        classDirectories = fileTree(
                dir: variant.javaCompile.destinationDir,
                excludes: ['**/R*.class',
                           '**/*$InjectAdapter.class',
                           '**/*$ModuleAdapter.class',
                           '**/*$ViewInjector*.class',
                           '**/*BuildConfig*.class'
                ]
        )
        sourceDirectories = files(variant.javaCompile.source)
        executionData = files("build/jacoco/test${variant.name.capitalize()}.exec")

        reports {
            xml.enabled true
            xml.destination "${buildDir}/reports/jacoco/${variant.name}/${variant.name}.xml"
            html.destination "${buildDir}/reports/jacoco/${variant.name}/html"
        }
    }
}
